
import java.io.*;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Map;
import java.util.StringTokenizer;
import java.util.Vector;
public class Test {
	/*
	 * 读文件，按行读取，然后放入map 中，把行号作为key，把行字符串作为值
	 */
	public static Map<Integer,String> readFileByLine(String path) throws IOException{
		File file=new File(path);
		BufferedReader reader=null;
		Map<Integer,String> mp=new HashMap<Integer,String>();
		try {
			reader=new BufferedReader(new FileReader(file));
			String tempString =null;
			int line=1;
			
			while((tempString=reader.readLine())!=null){
				mp.put(line, tempString);
				line++;
			}
			reader.close();
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}finally{
			if(reader!=null){
				try {
					reader.close();
				} catch (Exception e2) {
					// TODO: handle exception
					e2.printStackTrace();
				}
			}
		}
		return mp;
	}
	/*
	 *把map的value映射成一个 set
	 */
	public static HashSet<String> getVectory(Map<Integer,String> map){
		Iterator<String> itr=map.values().iterator();
		HashSet<String> set=new HashSet<String>();
		//Vector<String> v=new Vector<String>();
		while(itr.hasNext()){
			set.add(itr.next().toString());
		}
		return set;
	}
	public static Map<Object,Object> transMap(Map<Object,String> map){
		Map<Object,Object> m=new HashMap<Object,Object>();
		for(Map.Entry<Object, String> val:map.entrySet()){
			StringTokenizer st=new StringTokenizer(val.getValue());
			String ikey=st.nextToken();
			String ivalue="";
			if(st.countTokens()>2){
				while(st.hasMoreTokens()){
					ivalue+=st.nextToken()+ " ";
				}
				HashMap<Object,String> hm=new HashMap<Object,String>();
				hm.put(ikey, ivalue);
				m.put(ikey, transMap(hm));
			}else{
				ivalue=st.nextToken();
			}
			m.put(ikey, null);
		}
		return m;
	}
	public static double getLogProbability(){
		return 0;
	}
	public static void main(String[] args) {
		
	}

}
